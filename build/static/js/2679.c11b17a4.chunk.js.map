{
  "version": 3,
  "file": "static/js/2679.c11b17a4.chunk.js",
  "mappings": "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",
  "sources": [
    "app/views/sessions/JwtLogin.jsx"
  ],
  "sourcesContent": [
    "import React, { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Card, Grid, TextField, Box, styled, useTheme } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\n// STYLED COMPONENTS\nconst FlexBox = styled(Box)(() => ({\n  display: \"flex\",\n}));\n\nconst ContentBox = styled(\"div\")(() => ({\n  height: \"100%\",\n  padding: \"32px\",\n  position: \"relative\",\n  background: \"rgba(0, 0, 0, 0.01)\",\n}));\n\nconst StyledRoot = styled(\"div\")(() => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  backgroundColor: \"#1A2038\",\n  minHeight: \"100% !important\",\n  \"& .card\": {\n    maxWidth: 800,\n    minHeight: 400,\n    margin: \"1rem\",\n    display: \"flex\",\n    borderRadius: 12,\n    alignItems: \"center\",\n  },\n\n  \".img-wrapper\": {\n    height: \"100%\",\n    minWidth: 320,\n    display: \"flex\",\n    padding: \"2rem\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, \"Password must be 6 character length\")\n    .required(\"Password is required!\"),\n  username: Yup.string().required(\"Username is required!\"),\n});\n\nexport default function JwtLogin() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleLogin = async (values) => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(\n        \"https://api-neiko.site/api/users/login\",\n        values\n      );\n      const { user } = response.data;\n      if (user.isAdmin) {\n        localStorage.setItem(\"userId\", user._id);\n        navigate(\"/dashboard/default\");\n      } else {\n        setError(\"Bạn không có quyền truy cập vào trang quản trị.\");\n      }\n    } catch (error) {\n      setError(error.response?.data?.message || \"Có lỗi xảy ra khi đăng nhập.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <StyledRoot>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <div className=\"img-wrapper\">\n              <h1>NEIKO</h1>\n            </div>\n          </Grid>\n          <Grid item sm={6} xs={12}>\n            <ContentBox>\n              <Formik\n                initialValues={{ username: \"\", password: \"\" }}\n                validationSchema={validationSchema}\n                onSubmit={handleLogin}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                }) => (\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"text\"\n                      name=\"username\"\n                      label=\"Username\"\n                      variant=\"outlined\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.username}\n                      error={touched.username && Boolean(errors.username)}\n                      helperText={touched.username && errors.username}\n                      sx={{ mb: 3 }}\n                    />\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.password}\n                      error={touched.password && Boolean(errors.password)}\n                      helperText={touched.password && errors.password}\n                      sx={{ mb: 1.5 }}\n                    />\n                    <FlexBox justifyContent=\"space-between\">\n                      <FlexBox gap={1}></FlexBox>\n                    </FlexBox>\n                    <LoadingButton\n                      fullWidth\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ my: 2 }}\n                    >\n                      Đăng nhập\n                    </LoadingButton>\n                    {error && (\n                      <div style={{ color: \"red\", marginTop: 10 }}>{error}</div>\n                    )}\n                  </form>\n                )}\n              </Formik>\n            </ContentBox>\n          </Grid>\n        </Grid>\n      </Card>\n    </StyledRoot>\n  );\n}\n"
  ],
  "names": [
    "FlexBox",
    "styled",
    "Box",
    "display",
    "ContentBox",
    "height",
    "padding",
    "position",
    "background",
    "StyledRoot",
    "alignItems",
    "justifyContent",
    "backgroundColor",
    "minHeight",
    "maxWidth",
    "margin",
    "borderRadius",
    "minWidth",
    "validationSchema",
    "Yup",
    "shape",
    "password",
    "min",
    "required",
    "username",
    "JwtLogin",
    "useTheme",
    "navigate",
    "useNavigate",
    "loading",
    "setLoading",
    "useState",
    "error",
    "setError",
    "_jsx",
    "children",
    "Card",
    "className",
    "_jsxs",
    "Grid",
    "container",
    "item",
    "sm",
    "xs",
    "Formik",
    "initialValues",
    "onSubmit",
    "async",
    "response",
    "axios",
    "post",
    "values",
    "user",
    "data",
    "isAdmin",
    "localStorage",
    "setItem",
    "_id",
    "_error$response",
    "_error$response$data",
    "message",
    "_ref",
    "errors",
    "touched",
    "handleChange",
    "handleBlur",
    "handleSubmit",
    "TextField",
    "fullWidth",
    "size",
    "type",
    "name",
    "label",
    "variant",
    "onChange",
    "onBlur",
    "value",
    "Boolean",
    "helperText",
    "sx",
    "mb",
    "gap",
    "LoadingButton",
    "color",
    "my",
    "style",
    "marginTop"
  ],
  "sourceRoot": ""
}
