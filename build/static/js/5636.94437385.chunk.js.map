{
  "version": 3,
  "file": "static/js/5636.94437385.chunk.js",
  "mappings": "uUAwBA,MAAMA,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GA8LL,EA3LcC,KACZ,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,IAC1BG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,IACtCK,EAAMC,IAAWN,EAAAA,EAAAA,WAAS,IAC1BO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,OAC1CS,EAAUC,IAAeV,EAAAA,EAAAA,UAAS,CACvCW,KAAM,GACNC,WAAY,MAEPC,EAAcC,IAAmBd,EAAAA,EAAAA,WAAS,IAC1Ce,EAAiBC,IAAsBhB,EAAAA,EAAAA,UAAS,KAChDiB,EAAkBC,IAAuBlB,EAAAA,EAAAA,UAAS,WAEnDmB,EAAWC,UACf,IACE,MAGMC,SAHYC,EAAAA,EAAMC,IAAI,mCAAoC,CAC9DC,OAAQ,CAAEvB,OAAMwB,MAAO,OAEHC,KACtB3B,EAASsB,EAAUvB,OACnBM,EAAciB,EAAUlB,WAC1B,CAAE,MAAOwB,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,IAGFE,EAAAA,EAAAA,YAAU,KACRV,GAAU,GACT,CAAClB,IAEJ,MAIM6B,EAAa,WAAkB,IAAjBC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACzBxB,EAAgBuB,GAEdrB,EADEqB,GAGU,CAAEpB,KAAM,GAAIC,WAAY,KAEtCN,GAAQ,EACV,EAEM6B,EAAcA,KAClB7B,GAAQ,EAAM,EAGV8B,EAAgBC,IACpB3B,EAAY,IAAKD,EAAU,CAAC4B,EAAEC,OAAO3B,MAAO0B,EAAEC,OAAOC,OAAQ,EAyCzDC,EAAsBA,KAC1B1B,GAAgB,EAAM,EAGxB,OACE2B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAAQ,YAAYC,MAAM,UAAUC,QAASA,IAAMlB,IAAaa,SAAC,wBAGzEC,EAAAA,EAAAA,KAACK,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAMR,UAC/BF,EAAAA,EAAAA,MAACW,EAAAA,EAAK,CAAC,aAAW,eAAcT,SAAA,EAC9BC,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CAAAV,UACRF,EAAAA,EAAAA,MAACa,EAAAA,EAAQ,CAAAX,SAAA,EACPC,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CAACC,MAAM,SAAQb,SAAC,uBAC1BC,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CAACC,MAAM,SAAQb,SAAC,gBAC1BC,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CAACC,MAAM,SAAQb,SAAC,iCAG9BC,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CAAAd,SACP7C,EAAM4D,KAAK3B,IACVU,EAAAA,EAAAA,MAACa,EAAAA,EAAQ,CAAAX,SAAA,EACPC,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CAACC,MAAM,SAASN,UAAU,KAAKS,MAAM,MAAKhB,SACjDZ,EAAKpB,QAER8B,EAAAA,EAAAA,MAACc,EAAAA,EAAS,CAACC,MAAM,SAAQb,SAAA,CAAEZ,EAAKnB,WAAW,QAC3C6B,EAAAA,EAAAA,MAACc,EAAAA,EAAS,CAACC,MAAM,SAAQb,SAAA,EACvBC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACE,MAAM,UAAUC,QAASA,IAAMlB,EAAWC,GAAMY,SAAC,cAGzDC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLE,MAAM,YACNC,QAASA,IA7CN5B,WACnB,UACQE,EAAAA,EAAMsC,OAAO,oCAADC,OAAqCC,IACvD5C,EAAoB,WACpBF,EAAmB,oDACnBF,GAAgB,GAChBK,GACF,CAAE,MAAOQ,GAAQ,IAADoC,EAAAC,EACd9C,EAAoB,SACpBF,GAAiC,QAAd+C,EAAApC,EAAMsC,gBAAQ,IAAAF,GAAM,QAANC,EAAdD,EAAgBrC,YAAI,IAAAsC,OAAN,EAAdA,EAAsBE,UAAW,8BACpDpD,GAAgB,EAClB,GAkC+BqD,CAAapC,EAAKqC,KAAKzB,SACvC,gBAZUZ,EAAKqC,eAqB5BxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CACJC,GAAI,CAAEC,WAAY,OAAQC,QAAS,OAAQC,eAAgB,UAC3DC,QAAS,EAAE/B,UAEXC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,CACTC,MAAOzE,EACPF,KAAMA,EACN8C,MAAM,UACN8B,SA7GiBC,CAACC,EAAOC,KAC/B9E,EAAQ8E,EAAQ,OA+GdpC,EAAAA,EAAAA,KAACqC,EAAAA,EAAK,CAAC5E,KAAMA,EAAM6E,QAAS/C,EAAYQ,UACtCF,EAAAA,EAAAA,MAAC0C,EAAAA,EAAG,CAACb,GAAInF,EAAMwD,SAAA,EACbC,EAAAA,EAAAA,KAACwC,EAAAA,EAAU,CAACtC,QAAQ,KAAKI,UAAU,KAAIP,SACpCpC,EAAe,sBAAgB,wBAElCqC,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACRC,WAAS,EACTC,OAAO,SACPC,MAAM,oBACN7E,KAAK,OACL4B,MAAO9B,EAASE,KAChBkE,SAAUzC,KAEZQ,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACRC,WAAS,EACTC,OAAO,SACPC,MAAM,aACN7E,KAAK,aACL4B,MAAO9B,EAASG,WAChBiE,SAAUzC,KAEZQ,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,QAlHW5B,UACnB,IACMb,QACIe,EAAAA,EAAMmE,IAAI,oCAAD5B,OACuBtD,EAAa6D,KACjD3D,SAGIa,EAAAA,EAAMoE,KAAK,0CAA2CjF,GAE9DS,EAAoB,WACpBF,EACET,EAAe,+DAA6B,qDAE9CO,GAAgB,GAChBK,IACAgB,GACF,CAAE,MAAOR,GAAQ,IAADgE,EAAAC,EACd1E,EAAoB,SACpBF,GAAiC,QAAd2E,EAAAhE,EAAMsC,gBAAQ,IAAA0B,GAAM,QAANC,EAAdD,EAAgBjE,YAAI,IAAAkE,OAAN,EAAdA,EAAsB1B,UAAW,8BACpDpD,GAAgB,EAClB,GA8FQwD,GAAI,CAAEuB,GAAI,GAAIlD,SAEbpC,EAAe,qBAAa,kBAInCqC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPzF,KAAMQ,EACNkF,iBAAkB,IAClBb,QAAS1C,EAAoBG,UAE7BC,EAAAA,EAAAA,KAACoD,EAAAA,EAAK,CAACd,QAAS1C,EAAqByD,SAAUhF,EAAiB0B,SAC7D5B,QAGJ,C",
  "sources": [
    "app/views/dashboard/role/index.js"
  ],
  "sourcesContent": [
    "/* eslint-disable react-hooks/rules-of-hooks */\n// components/RoleTable.js\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Pagination,\n  Button,\n  Stack,\n  Modal,\n  Box,\n  TextField,\n  Typography,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst index = () => {\n  const [roles, setRoles] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [roleForm, setRoleForm] = useState({\n    name: \"\",\n    commission: \"\",\n  });\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n\n  const getRoles = async () => {\n    try {\n      const res = await axios.get(`https://api-neiko.site/api/roles`, {\n        params: { page, limit: 10 },\n      });\n      const rolesData = res.data;\n      setRoles(rolesData.roles);\n      setTotalPages(rolesData.totalPages);\n    } catch (error) {\n      console.error(\"Error fetching roles:\", error);\n    }\n  };\n\n  useEffect(() => {\n    getRoles();\n  }, [page]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleOpen = (role = null) => {\n    setSelectedRole(role);\n    if (role) {\n      setRoleForm(role);\n    } else {\n      setRoleForm({ name: \"\", commission: \"\" });\n    }\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (e) => {\n    setRoleForm({ ...roleForm, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (selectedRole) {\n        await axios.put(\n          `https://api-neiko.site/api/roles/${selectedRole._id}`,\n          roleForm\n        );\n      } else {\n        await axios.post(\"https://api-neiko.site/api/roles/create\", roleForm);\n      }\n      setSnackbarSeverity(\"success\");\n      setSnackbarMessage(\n        selectedRole ? \"Vai trò đã được cập nhật\" : \"Vai trò đã được thêm\"\n      );\n      setOpenSnackbar(true);\n      getRoles();\n      handleClose();\n    } catch (error) {\n      setSnackbarSeverity(\"error\");\n      setSnackbarMessage(error.response?.data?.message || \"Có lỗi xảy ra\");\n      setOpenSnackbar(true);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`https://api-neiko.site/api/roles/${id}`);\n      setSnackbarSeverity(\"success\");\n      setSnackbarMessage(\"Vai trò đã được xóa\");\n      setOpenSnackbar(true);\n      getRoles();\n    } catch (error) {\n      setSnackbarSeverity(\"error\");\n      setSnackbarMessage(error.response?.data?.message || \"Có lỗi xảy ra\");\n      setOpenSnackbar(true);\n    }\n  };\n\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <>\n      <Button variant=\"contained\" color=\"primary\" onClick={() => handleOpen()}>\n        Thêm vai trò\n      </Button>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Tên vai trò</TableCell>\n              <TableCell align=\"center\">Commission</TableCell>\n              <TableCell align=\"center\">Hành động</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {roles.map((role) => (\n              <TableRow key={role._id}>\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                  {role.name}\n                </TableCell>\n                <TableCell align=\"center\">{role.commission}%</TableCell>\n                <TableCell align=\"center\">\n                  <Button color=\"primary\" onClick={() => handleOpen(role)}>\n                    Sửa\n                  </Button>\n                  <Button\n                    color=\"secondary\"\n                    onClick={() => handleDelete(role._id)}\n                  >\n                    Xoá\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Stack\n        sx={{ paddingTop: \"15px\", display: \"flex\", justifyContent: \"center\" }}\n        spacing={2}\n      >\n        <Pagination\n          count={totalPages}\n          page={page}\n          color=\"primary\"\n          onChange={handleChangePage}\n        />\n      </Stack>\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style}>\n          <Typography variant=\"h6\" component=\"h2\">\n            {selectedRole ? \"Sửa vai trò\" : \"Thêm vai trò\"}\n          </Typography>\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Tên vai trò\"\n            name=\"name\"\n            value={roleForm.name}\n            onChange={handleChange}\n          />\n          <TextField\n            fullWidth\n            margin=\"normal\"\n            label=\"Commission\"\n            name=\"commission\"\n            value={roleForm.commission}\n            onChange={handleChange}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSubmit}\n            sx={{ mt: 2 }}\n          >\n            {selectedRole ? \"Cập nhật\" : \"Thêm\"}\n          </Button>\n        </Box>\n      </Modal>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleCloseSnackbar}\n      >\n        <Alert onClose={handleCloseSnackbar} severity={snackbarSeverity}>\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default index;\n"
  ],
  "names": [
    "style",
    "position",
    "top",
    "left",
    "transform",
    "width",
    "bgcolor",
    "border",
    "boxShadow",
    "p",
    "index",
    "roles",
    "setRoles",
    "useState",
    "page",
    "setPage",
    "totalPages",
    "setTotalPages",
    "open",
    "setOpen",
    "selectedRole",
    "setSelectedRole",
    "roleForm",
    "setRoleForm",
    "name",
    "commission",
    "openSnackbar",
    "setOpenSnackbar",
    "snackbarMessage",
    "setSnackbarMessage",
    "snackbarSeverity",
    "setSnackbarSeverity",
    "getRoles",
    "async",
    "rolesData",
    "axios",
    "get",
    "params",
    "limit",
    "data",
    "error",
    "console",
    "useEffect",
    "handleOpen",
    "role",
    "arguments",
    "length",
    "undefined",
    "handleClose",
    "handleChange",
    "e",
    "target",
    "value",
    "handleCloseSnackbar",
    "_jsxs",
    "_Fragment",
    "children",
    "_jsx",
    "Button",
    "variant",
    "color",
    "onClick",
    "TableContainer",
    "component",
    "Paper",
    "Table",
    "TableHead",
    "TableRow",
    "TableCell",
    "align",
    "TableBody",
    "map",
    "scope",
    "delete",
    "concat",
    "id",
    "_error$response2",
    "_error$response2$data",
    "response",
    "message",
    "handleDelete",
    "_id",
    "Stack",
    "sx",
    "paddingTop",
    "display",
    "justifyContent",
    "spacing",
    "Pagination",
    "count",
    "onChange",
    "handleChangePage",
    "event",
    "newPage",
    "Modal",
    "onClose",
    "Box",
    "Typography",
    "TextField",
    "fullWidth",
    "margin",
    "label",
    "put",
    "post",
    "_error$response",
    "_error$response$data",
    "mt",
    "Snackbar",
    "autoHideDuration",
    "Alert",
    "severity"
  ],
  "sourceRoot": ""
}
