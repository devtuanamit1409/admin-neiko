{"version":3,"file":"static/js/8213.003ac169.chunk.js","mappings":"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","sources":["app/views/dashboard/money/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Pagination,\n  Button,\n  Stack,\n  TextField,\n  Box,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { vi } from \"date-fns/locale\";\nimport { format } from \"date-fns\";\n\nconst UserBalanceTable = () => {\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n\n  const getUsers = async () => {\n    try {\n      const res = await axios.get(\n        `https://api-neiko.site/api/users/with-balance`,\n        {\n          params: {\n            page,\n            limit: 10,\n            startDate: format(startDate, \"dd/MM/yyyy\"),\n            endDate: format(endDate, \"dd/MM/yyyy\"),\n          },\n        }\n      );\n      const usersData = res.data;\n      setUsers(usersData.users);\n      setTotalPages(usersData.totalPages);\n    } catch (error) {\n      setSnackbarSeverity(\"error\");\n      setSnackbarMessage(error.response?.data?.message || \"Có lỗi xảy ra\");\n      setOpenSnackbar(true);\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, [page, startDate, endDate]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={2}>\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={vi}>\n          <DatePicker\n            label=\"Ngày bắt đầu\"\n            value={startDate}\n            onChange={(newValue) => setStartDate(newValue)}\n            renderInput={(params) => <TextField {...params} />}\n            inputFormat=\"dd/MM/yyyy\"\n          />\n          <DatePicker\n            label=\"Ngày kết thúc\"\n            value={endDate}\n            onChange={(newValue) => setEndDate(newValue)}\n            renderInput={(params) => <TextField {...params} />}\n            inputFormat=\"dd/MM/yyyy\"\n          />\n        </LocalizationProvider>\n        <Button variant=\"contained\" color=\"primary\" onClick={getUsers}>\n          Lấy danh sách\n        </Button>\n      </Box>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Tên người dùng</TableCell>\n              <TableCell align=\"center\">Tổng hoa hồng</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map((user) => (\n              <TableRow key={user.name}>\n                <TableCell align=\"center\">{user.name}</TableCell>\n                <TableCell align=\"center\">\n                  {user.totalCommission.toLocaleString()}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Stack\n        sx={{ paddingTop: \"15px\", display: \"flex\", justifyContent: \"center\" }}\n        spacing={2}\n      >\n        <Pagination\n          count={totalPages}\n          page={page}\n          color=\"primary\"\n          onChange={handleChangePage}\n        />\n      </Stack>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={() => setOpenSnackbar(false)}\n      >\n        <Alert\n          onClose={() => setOpenSnackbar(false)}\n          severity={snackbarSeverity}\n        >\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default UserBalanceTable;\n"],"names":["UserBalanceTable","users","setUsers","useState","page","setPage","totalPages","setTotalPages","startDate","setStartDate","Date","endDate","setEndDate","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","getUsers","async","usersData","axios","get","params","limit","format","data","error","_error$response","_error$response$data","response","message","useEffect","_jsxs","Box","children","display","justifyContent","mb","LocalizationProvider","dateAdapter","AdapterDateFns","locale","vi","_jsx","DatePicker","label","value","onChange","newValue","renderInput","TextField","inputFormat","Button","variant","color","onClick","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","user","name","totalCommission","toLocaleString","Stack","sx","paddingTop","spacing","Pagination","count","handleChangePage","event","newPage","Snackbar","open","autoHideDuration","onClose","Alert","severity"],"sourceRoot":""}